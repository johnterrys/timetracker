// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TimeCats;

namespace TimeCats.Migrations
{
    [DbContext(typeof(TimeTrackerContext))]
    [Migration("20200110053631_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TimeCats.Models.Course", b =>
                {
                    b.Property<int>("courseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("courseName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.HasKey("courseID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("TimeCats.Models.Group", b =>
                {
                    b.Property<int>("groupID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("groupName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<int>("projectID")
                        .HasColumnType("integer");

                    b.HasKey("groupID");

                    b.HasIndex("projectID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("TimeCats.Models.Project", b =>
                {
                    b.Property<int>("projectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CourseID")
                        .HasColumnType("integer");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<string>("projectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("projectID");

                    b.HasIndex("CourseID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("TimeCats.Models.TimeCard", b =>
                {
                    b.Property<int>("timeslotID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("createdOn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("groupID")
                        .HasColumnType("integer");

                    b.Property<string>("timeIn")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("timeOut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("userID")
                        .HasColumnType("integer");

                    b.HasKey("timeslotID");

                    b.HasIndex("groupID");

                    b.HasIndex("userID");

                    b.ToTable("TimeCards");
                });

            modelBuilder.Entity("TimeCats.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("groupID")
                        .HasColumnType("integer");

                    b.Property<bool>("isActive")
                        .HasColumnType("boolean");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("type")
                        .HasColumnType("character(1)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("userID");

                    b.HasIndex("groupID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TimeCats.Models.UserCourse", b =>
                {
                    b.Property<int>("userID")
                        .HasColumnType("integer");

                    b.Property<int>("courseID")
                        .HasColumnType("integer");

                    b.HasKey("userID", "courseID");

                    b.HasIndex("courseID");

                    b.ToTable("UserCourse");
                });

            modelBuilder.Entity("TimeCats.Models.UserGroup", b =>
                {
                    b.Property<int>("userID")
                        .HasColumnType("integer");

                    b.Property<int>("groupID")
                        .HasColumnType("integer");

                    b.Property<int?>("projectID")
                        .HasColumnType("integer");

                    b.HasKey("userID", "groupID");

                    b.HasIndex("groupID");

                    b.HasIndex("projectID");

                    b.ToTable("UserGroup");
                });

            modelBuilder.Entity("TimeCats.Models.Group", b =>
                {
                    b.HasOne("TimeCats.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("projectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeCats.Models.Project", b =>
                {
                    b.HasOne("TimeCats.Models.Course", "Course")
                        .WithMany("projects")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeCats.Models.TimeCard", b =>
                {
                    b.HasOne("TimeCats.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("groupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeCats.Models.User", "User")
                        .WithMany("timecards")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeCats.Models.User", b =>
                {
                    b.HasOne("TimeCats.Models.Group", null)
                        .WithMany("users")
                        .HasForeignKey("groupID");
                });

            modelBuilder.Entity("TimeCats.Models.UserCourse", b =>
                {
                    b.HasOne("TimeCats.Models.Course", "Course")
                        .WithMany("UserCourses")
                        .HasForeignKey("courseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeCats.Models.User", "User")
                        .WithMany("UserCourses")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeCats.Models.UserGroup", b =>
                {
                    b.HasOne("TimeCats.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("groupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TimeCats.Models.Project", null)
                        .WithMany("UserGroups")
                        .HasForeignKey("projectID");

                    b.HasOne("TimeCats.Models.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
